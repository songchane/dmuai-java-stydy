package javastudy.day3;

import java.time.LocalDate;
import java.util.Calendar;
import java.util.Scanner;

public class CalendarTest{

	
	public static void main(String[] args) {
		System.out.println("CalendatTest!");
		
		Scanner scanner = new Scanner(System.in);
		
		System.out.println("년도 입력:");
		int year = scanner.nextInt();
		System.out.println("월 입력:");
		int month = scanner.nextInt();
		
		Calendar cal = Calendar.getInstance();
		cal.set(year, month - 1, 1);
		
		int starweek = cal.get(Calendar.DAY_OF_WEEK);
		System.out.println("starWeek:" + starweek);
		
		
		int DayOfMonth = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
		
		String weekNames[] = {"일", "월", "화", "수", "목", "금", "토"};
		
		System.out.println(cal.getTime());
		System.out.println(DayOfMonth);
		
		
		for (String weekName : weekNames) {
			System.out.print(weekName + "\t");
		}
		System.out.println();
		
		int step = 0;
		
		for (int i = 1; i <= starweek - 1; i++) {
			System.out.print("\t");
			step++;
		}
		
		for (int i = 1; i <= DayOfMonth; i++) {
			step++;
			System.out.print(i + "\t");
			if (step % 7 == 0) {
				System.out.println();
			}
		}
	}

}





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

내장 패키지: java.lang, java.util, java.text, java.io, java.net

java.lang 패키지: 자바의 가장 기본적인 클래스와 인터페이스가 담겨 있는 패키지
Object, System, Class, String, StringBuffer, StringBuilder, Math, Wrapper
Object 클래스: 모든 클래스의 상위, 자바의 최상위 클래스 이므로 모든 메서드를 바로 사용 가능
Math 클래스: 수학에서 자주 사용하는 상수와 함수를 미리 구현해 놓는 클래스, 모든 메서드는 정적 메서드이므로 객체 생성 안해도 바로 사용 가능
String 클래스: 메서드 개많아.
StringBuffer 클래스: String 클래스와 마찬가지로 문자열 나타냄, 인스턴스는 그 값을 변경하거나 추가할 수 있기 때문에 가능한 String으로 사용됨 
StringBuilder 클래스: 변경 가능한 문자열을 나타냄, 동기화되지 않는다는 점을 제외하고 StringBuffer와 동일
=> append만 거의 사용

래퍼 클래스: 8개의 기본 자료형에 해당하는 데이터를 객체로 포장하는 클래스
기본 자료형을 객체로 변환하여 사용 => 대문자로 바꿔서 사용
- 박싱 언박싱

java.util 패키지: 유틸리티 성격의 클래스와 인터페이스를 모아놓은 패키지로 Date, Calendar 등의 날짜 관련 클래스가 포한
List, Set, Collection, Map 등과 같은 다양한 자료 구조를 모아놓은 컬렉션 프레임워크도 담겨 있음

Random





